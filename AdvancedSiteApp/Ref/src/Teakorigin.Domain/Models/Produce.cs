// <copyright file="Produce.cs" company="PlaceholderCompany">
// Copyright (c) PlaceholderCompany. All rights reserved.
// </copyright>
// <autogenerated />

namespace Teakorigin.Domain.Model
{
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    using Newtonsoft.Json;

    public partial class Produce
    {
        public Produce()
        {
            this.LocationProduce = new HashSet<LocationProduce>();
        }

        public string ProduceCode { get; set; }

        [JsonIgnore]
        public long Id { get; set; }

        public string ProduceName { get; set; }

        public bool IsParent { get; set; }

        public bool IsChild { get; set; }

        public string ParentCode { get; set; }

        [JsonIgnore]
        public virtual ICollection<LocationProduce> LocationProduce { get; set; }

        [MaxLength(10)]
        public string Colour { get; set; }

        /// <summary>
        /// Gets the identifier. Only required for frontend. Same as Produce Code.
        /// </summary>
        /// <value>
        /// The identifier.
        /// </value>
        [NotMapped]
        [JsonProperty("id")]
        public string ProduceId
        {
            get
            {
                return this.ProduceCode;
            }
        }

        [Column("usda_sucrose")] [MaxLength(100)] [JsonIgnore] public double? usda_sucrose { get; set; }
        [Column("usda_fructose")] [MaxLength(100)] [JsonIgnore] public double? usda_fructose { get; set; }
        [Column("usda_glucose")] [MaxLength(100)] [JsonIgnore] public double? usda_glucose { get; set; }
        [Column("usda_vit_c")] [MaxLength(100)] [JsonIgnore] public double? usda_vit_c { get; set; }
        [Column("usda_moisture")] [MaxLength(100)] [JsonIgnore] public double? usda_moisture { get; set; }
        [Column("usda_anthocyanins")] [MaxLength(100)] [JsonIgnore] public double? usda_anthocyanins { get; set; }
        [Column("usda_antioxidants")] [MaxLength(100)] [JsonIgnore] public double? usda_antioxidants { get; set; }
        [Column("usda_citric_acid")] [MaxLength(100)] [JsonIgnore] public double? usda_citric_acid { get; set; }
        [Column("usda_malic_acid")] [MaxLength(100)] [JsonIgnore] public double? usda_malic_acid { get; set; }
        [Column("usda_oxalic_acid")] [MaxLength(100)] [JsonIgnore] public double? usda_oxalic_acid { get; set; }
        [Column("usda_tartaric")] [MaxLength(100)] [JsonIgnore] public double? usda_tartaric { get; set; }
        [Column("usda_oil_total")] [MaxLength(100)] [JsonIgnore] public double? usda_oil_total { get; set; }
        [Column("usda_oleic")] [MaxLength(100)] [JsonIgnore] public double? usda_oleic { get; set; }
        [Column("usda_linoleic")] [MaxLength(100)] [JsonIgnore] public double? usda_linoleic { get; set; }
        [Column("usda_palmitic")] [MaxLength(100)] [JsonIgnore] public double? usda_palmitic { get; set; }
        [Column("usda_palmitoleic")] [MaxLength(100)] [JsonIgnore] public double? usda_palmitoleic { get; set; }
        [Column("usda_lycopene")] [MaxLength(100)] [JsonIgnore] public double? usda_lycopene { get; set; }
        [Column("usda_carotenoids")] [MaxLength(100)] [JsonIgnore] public double? usda_carotenoids { get; set; }
        [Column("usda_lutein")] [MaxLength(100)] [JsonIgnore] public double? usda_lutein { get; set; }
        [Column("usda_potassium")] [MaxLength(100)] [JsonIgnore] public double? usda_potassium { get; set; }
    }
}
